RELATÓRIO DE AUDITORIA - BetterBuy
================================================================================

Total de problemas: 59


LOOP_RISK:
--------------------------------------------------------------------------------

Arquivo: my-app\app\(main)\checkout\page.tsx:114
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const orderItems: OrderItem[] = items.map((item) => ({

Arquivo: my-app\lib\supabase\actions.ts:64
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const orderItems = items.map((item) => ({

Arquivo: my-app\lib\supabase\queries.ts:40
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const productsWithRatings = data.map(product => {

Arquivo: my-app\lib\supabase\queries.ts:41
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const ratings = product.reviews?.map(r => r.rating) || []

Arquivo: my-app\lib\supabase\queries.ts:103
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const servicesWithRatings = data.map(service => {

Arquivo: my-app\lib\supabase\queries.ts:104
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const ratings = service.reviews?.map(r => r.rating) || []

Arquivo: my-app\lib\supabase\queries.ts:159
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const businessesWithRatings = data.map(business => {

Arquivo: my-app\lib\supabase\queries.ts:160
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const ratings = business.reviews?.map(r => r.rating) || []

Arquivo: my-app\lib\supabase\queries.ts:233
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const ratings = data.reviews?.map(r => r.rating) || []

Arquivo: my-app\lib\supabase\queries.ts:330
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const ratings = data.reviews?.map(r => r.rating) || []

Arquivo: my-app\lib\supabase\queries.ts:435
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const ratings = data.reviews?.map(r => r.rating) || []

Arquivo: my-app\lib\supabase\queries.ts:456
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const products = data.products?.map(product => ({

Arquivo: my-app\lib\supabase\queries.ts:465
Problema: Array.map() sem useMemo pode causar loop infinito
Código: const services = data.services?.map(service => ({

HYDRATION:
--------------------------------------------------------------------------------

Arquivo: my-app\components\ui\sidebar.tsx:113
Problema: Uso de window sem verificação
Código: window.addEventListener("keydown", handleKeyDown)

Arquivo: my-app\components\ui\sidebar.tsx:114
Problema: Uso de window sem verificação
Código: return () => window.removeEventListener("keydown", handleKey

Arquivo: my-app\components\ui\sidebar.tsx:91
Problema: Uso de document sem verificação
Código: document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path

Arquivo: my-app\components\ui\sidebar.tsx:593
Problema: Math.random() causa hidratação diferente
Código: Math.random()

Arquivo: my-app\components\ui\sidebar.tsx:91
Problema: document.cookie deve ser usado apenas no cliente
Código: document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path

Arquivo: my-app\hooks\use-mobile.ts:11
Problema: Uso de window sem verificação
Código: setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)

Arquivo: my-app\hooks\use-mobile.ts:14
Problema: Uso de window sem verificação
Código: setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)

PERFORMANCE:
--------------------------------------------------------------------------------

Arquivo: my-app\components\businesses-list.tsx:67
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

Arquivo: my-app\components\businesses-list.tsx:88
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\businesses-list.tsx:113
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\filters-panel.tsx:78
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

Arquivo: my-app\components\filters-panel.tsx:88
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

Arquivo: my-app\components\filters-panel.tsx:107
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\mode-toggle.tsx:27
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\mode-toggle.tsx:30
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\mode-toggle.tsx:33
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\products-list.tsx:60
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

Arquivo: my-app\components\products-list.tsx:79
Problema: Função inline em prop (considere useCallback)
Código: onMinPriceChange={(value) =>

Arquivo: my-app\components\products-list.tsx:80
Problema: Função inline em prop (considere useCallback)
Código: onMaxPriceChange={(value) =>

Arquivo: my-app\components\products-list.tsx:81
Problema: Função inline em prop (considere useCallback)
Código: onMinRatingChange={(value) =>

Arquivo: my-app\components\products-list.tsx:104
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\products-list.tsx:117
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\products-list.tsx:130
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\review-form.tsx:63
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\review-form.tsx:64
Problema: Função inline em prop (considere useCallback)
Código: onMouseEnter={() =>

Arquivo: my-app\components\review-form.tsx:65
Problema: Função inline em prop (considere useCallback)
Código: onMouseLeave={() =>

Arquivo: my-app\components\review-form.tsx:97
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

Arquivo: my-app\components\services-list.tsx:68
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

Arquivo: my-app\components\services-list.tsx:87
Problema: Função inline em prop (considere useCallback)
Código: onMinPriceChange={(value) =>

Arquivo: my-app\components\services-list.tsx:88
Problema: Função inline em prop (considere useCallback)
Código: onMaxPriceChange={(value) =>

Arquivo: my-app\components\services-list.tsx:89
Problema: Função inline em prop (considere useCallback)
Código: onMinRatingChange={(value) =>

Arquivo: my-app\components\services-list.tsx:112
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\services-list.tsx:125
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\services-list.tsx:138
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\team-switcher.tsx:69
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\components\ui\sidebar.tsx:251
Problema: Função inline em prop (considere useCallback)
Código: onClick={(event) =>

Arquivo: my-app\app\(main)\carrinho\page.tsx:75
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\app\(main)\carrinho\page.tsx:86
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\app\(main)\carrinho\page.tsx:98
Problema: Função inline em prop (considere useCallback)
Código: onClick={() =>

Arquivo: my-app\app\(auth)\login\page.tsx:60
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

Arquivo: my-app\app\(auth)\login\page.tsx:75
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

Arquivo: my-app\app\(auth)\registro\page.tsx:78
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

Arquivo: my-app\app\(auth)\registro\page.tsx:93
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

Arquivo: my-app\app\(auth)\registro\page.tsx:108
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

Arquivo: my-app\app\(auth)\registro\page.tsx:123
Problema: Função inline em prop (considere useCallback)
Código: onChange={(e) =>

WARNING:
--------------------------------------------------------------------------------

Arquivo: my-app\app\(main)\checkout\page.tsx:21
Problema: useState com objeto inline
Código: useState({
    fullName: '',
    email: '',
    ph
